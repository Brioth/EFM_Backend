// <auto-generated />
using System;
using EFM_Backend.API.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFM_Backend.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190420191258_RenameResourceToEmployee")]
    partial class RenameResourceToEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Assignments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Assignment");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.EmployeeAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("AssignmentId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("EmployeeId", "AssignmentId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("EmployeeAssignments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EmployeeAssignment");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.Assignment_Fixed", b =>
                {
                    b.HasBaseType("EFM_Backend.API.Domain.Models.Assignment");

                    b.Property<double>("HoursPerOccurence");

                    b.Property<byte>("Occurence");

                    b.HasDiscriminator().HasValue("Assignment_Fixed");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.Assignment_Variable", b =>
                {
                    b.HasBaseType("EFM_Backend.API.Domain.Models.Assignment");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("ManDays");

                    b.HasDiscriminator().HasValue("Assignment_Variable");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.EmployeeAssignment_Fixed", b =>
                {
                    b.HasBaseType("EFM_Backend.API.Domain.Models.EmployeeAssignment");

                    b.Property<double>("HoursPerOccurence");

                    b.Property<byte>("Occurence");

                    b.HasDiscriminator().HasValue("EmployeeAssignment_Fixed");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.EmployeeAssignment_Variable", b =>
                {
                    b.HasBaseType("EFM_Backend.API.Domain.Models.EmployeeAssignment");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("ManDays");

                    b.HasDiscriminator().HasValue("EmployeeAssignment_Variable");
                });

            modelBuilder.Entity("EFM_Backend.API.Domain.Models.EmployeeAssignment", b =>
                {
                    b.HasOne("EFM_Backend.API.Domain.Models.Assignment", "Assignment")
                        .WithMany("EmployeeAssignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFM_Backend.API.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
